server.port=5000
# spring.application.name=spring-boot-rest


# oracle sql

# spring.datasource.url=jdbc:oracle:thin:@localhost:1522/xe
# spring.datasource.url=jdbc:oracle:thin:@localhost:1521/xe
# spring.datasource.username=C##NTR153
# spring.datasource.password=0000


# -------------------------------- postgres -------------------------------- #

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


# local postgre sql

# spring.datasource.url=jdbc:postgresql://localhost:5432/telusko
# spring.datasource.username=telusko
# spring.datasource.password=0000


# aws RDS (Relational Database Service) postgre sql

# spring.datasource.url=jdbc:postgresql://postgresql-db.c3uiiq2c8fka.ap-south-1.rds.amazonaws.com:5432/telusko
# spring.datasource.username=postgres
# spring.datasource.password=ntr153_telusko


# aws ECS (Elastic Container Service) postgres sql

spring.datasource.url=jdbc:postgresql://35.154.63.85:5432/telusko
spring.datasource.username=postgres
spring.datasource.password=ntr153_telusko

# Sample data to enable login -

# Insert into USERS (ID,USERNAME,PASSWORD,ROLE) values (1,'ntr153','$2a$12$k1INd3TKnj5Nb4tibkqX.e0/0/9gSmEXZivDWcqgye4/v4Ck8bMEy','USER');
# Insert into USERS (ID,USERNAME,PASSWORD,ROLE) values (2,'admin','$2a$12$k1INd3TKnj5Nb4tibkqX.e0/0/9gSmEXZivDWcqgye4/v4Ck8bMEy','ADMIN');
# Insert into USERS (ID,USERNAME,PASSWORD,ROLE) values (3,'temp','$2a$12$DS.lpgZIzu8QHdELTvAmJOKWTuvuoNNUE8wte/VXgqkA2X09LuVbm','USER');


# spring.jpa.hibernate.ddl-auto=create
# to create a table always
spring.jpa.hibernate.ddl-auto=update            
# if we don't have a table, create one. Else, update existing
spring.jpa.show-sql=true
# to view the queries in cmd